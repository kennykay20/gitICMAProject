@model ICMATESTMOCKMVC.BAL.GenericModel.ViewModel.viewUsers

@{
    ViewBag.Title = "AddOrEdit";
}
<link href="~/Content/alertify.core.css" rel="stylesheet" />
<link href="~/Content/alertify.default.css" rel="stylesheet" />
<h2>@ViewBag.function</h2>
<a href="@Url.Action("Index", "User")" class="btn btn-default"><i class="fa fa-table"></i> Back to list</a>

@using (Html.BeginForm("AddOrEdit", "User", FormMethod.Post,new { enctype = "multipart/form-data", onSubmit = "return addUserDataPost(this)"} ))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.imagePath)
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @placeholder = "Male Or Female" } })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>

            </div>
            <div class="col-md-6">


                <div class="form-group">
                    @Html.LabelFor(model => model.imagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <img src="@Url.Content(Model.imagePath)" style="margin:10px" height="200" width="200" id="imagePreview" />
                        <input type="file" name="ImageUpload" accept="image/jpeg, image/png, image/jpg" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))" />
                    </div>
                </div>
            </div>

            
           
        </div>
    </div>
}
<script src="~/Content/alertify.min.js"></script>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}


